openapi: 3.0.3
info:
  title: Elementaris Service
  description: |-
    Definition of Elementaris service interface.
  contact:
    email: ops@essentx.com
  version: 1.3.0
servers:
  - url: /api/v1
tags:
  - name: sbom
    description: SBOM features
paths:
  /sbom:
    post:
      tags:
        - sbom
      summary: Upload SBOM
      description: Upload SBOM for analyzation and notarization.
      operationId: uploadSbom
      parameters:
        - $ref: "#/components/parameters/ProjectPathMandatory"
      requestBody:
        description: SBOM to submit
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SbomCycloneDX"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SbomReply"
        default:
          description: Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReply"
      security:
        - api_key:
            - read
            - write
        - ApiKeyAuth:
            - read
            - write
  /sbom/temporary-report:
    post:
      tags:
        - sbom
      summary: Analyze SBOM to receive a report
      description: Only analyze SBOM without uploading
      operationId: temporaryReport
      requestBody:
        description: CycloneDX SBOM to submit
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SbomCycloneDX"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemporaryReportReply"
        default:
          description: Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReply"
      security:
        - api_key:
            - read
            - write
        - ApiKeyAuth:
            - read
            - write
  /sbom/reports/{id}:
    get:
      tags:
        - sbom
      summary: Get report of SBOM
      description: Get the report of a previously analyzed SBOM
      operationId: getSbomReport
      parameters:
        - name: id
          in: path
          required: true
          description: ID returned by /sbom or /sbom/temporary-report endpoint
          schema:
            type: string
        - $ref: "#/components/parameters/ProjectPath"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportReply"
        default:
          description: Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReply"
      security:
        - api_key:
            - read
        - ApiKeyAuth:
            - read
  /sbom/trustlevels:
    get:
      tags:
        - sbom
      summary: Get trustlevel of analyzed SBOM
      description: Get the trustlevel of a previously analyzed SBOM. Will return essentx elementaris and customer trustlevel.
      operationId: getTrustLevel
      parameters:
        - $ref: "#/components/parameters/ProjectPathMandatory"
        - $ref: "#/components/parameters/SbomIdMandatory"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrustlevelReply"
        default:
          description: Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorReply"
      security:
        - api_key:
            - read
        - ApiKeyAuth:
            - read
components:
  schemas:
    ErrorReply:
      type: object
      properties:
        code:
          description: Status code
          type: integer
        message:
          description: Message of error (for debug)
          type: string
      required:
        - code
    TemporaryReportReply:
      type: object
      properties:
        sbomID:
          type: string
      required:
        - sbomID
    SbomReply:
      type: object
      properties:
        sbomID:
          type: string
        projectPath:
          type: string
      required:
        - sbomID
        - projectPath
    ReportReply:
      type: object
      properties:
        id:
          description: "DEPRECATED: Use sbomId! ID of SBOM."
          type: string
        sbomID:
          description: "ID of SBOM."
          type: string
        status:
          description: "Status of report operation. Report is generated for following states: TemporaryReportGenerated,FinalReportGenerated"
          type: string
          example: PendingScanResult
          enum:
            - ErrorDuringScan
            - PendingScanResult
            - TemporaryReportGenerated
            - FinalReportGenerated
        report:
          $ref: "#/components/schemas/SbomReport"
      required:
        - id
        - sbomID
        - status
    SbomCycloneDX:
      x-go-type: cyclonedx.BOM
      x-go-type-import:
        path: github.com/CycloneDX/cyclonedx-go
    SbomReport:
      type: object
      properties:
        trustLevelScore:
          description: "Score of trust level. The higher the better."
          type: integer
          example: 8
          minimum: 1
          maximum: 10
        vulnerabilities:
          type: array
          items:
            $ref: "#/components/schemas/SbomVulnerability"
      required:
        - trustLevelScore
    SbomVulnerability:
      type: object
      properties:
        id:
          description: CVE name.
          type: string
          example: "CVE-2999-5484"
        highestSeverity:
          description: Highest severity for given CVE.
          type: string
          example: critical
          enum:
            - critical
            - high
            - medium
            - low
            - info
            - none
            - unknown
        issues:
          type: array
          items:
            $ref: "#/components/schemas/SbomVulnerabilityIssue"
      required:
        - id
        - highestSeverity
    SbomVulnerabilityIssue:
      type: object
      properties:
        id:
          description: "ID of issue. First character indicates severity: I for information, E for error, W for warning."
          type: string
          example: "E001"
          pattern: '^[IEW]\d{3}$'
        description:
          description: Description of issue.
          type: string
      required:
        - id
        - description
    TrustlevelReply:
      type: object
      properties:
        sbomID:
          description: ID of SBOM.
          type: string
        elementarisTrustLevel:
          description: "Trustlevel set by Essentx Elementaris"
          $ref: "#/components/schemas/TrustLevel"
        customerTrustLevel:
          description: "Trustlevel set by customer signers group"
          $ref: "#/components/schemas/TrustLevel"
        trustLevelScore:
          description: "Score of trust level. The higher the better."
          type: integer
          example: 8
          minimum: 1
          maximum: 10
      required:
        - sbomID

    TrustLevel:
      type: string
      example: Trusted
      enum:
        - trusted
        - unsupported
        - untrusted

    ProjectPath:
      type: string
      pattern: '^[a-zA-Z0-9-]+(?:\/[a-zA-Z0-9-]+)*$'

    Label:
      type: string

    SbomId:
      type: string

  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  parameters:
    ProjectPath:
      name: projectPath
      description: Path of the project.
      in: query
      schema:
        $ref: "#/components/schemas/ProjectPath"
      required: false
    ProjectPathMandatory:
      name: projectPath
      description: Path of the project.
      in: query
      schema:
        $ref: "#/components/schemas/ProjectPath"
      required: true
    SbomIdMandatory:
      name: sbomID
      description: Id of sbom
      in: query
      schema:
        $ref: "#/components/schemas/SbomId"
      required: true
    Labels:
      name: labels
      description: Labels of sbom
      in: query
      schema:
        type: array
        items:
          $ref: "#/components/schemas/Label"
      required: false
